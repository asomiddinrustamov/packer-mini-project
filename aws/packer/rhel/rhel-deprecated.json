{
  "variables": {
    "ansible_playbook_file": "./rhel.yml",
    "ansible_command":"ansible-playbook"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "ami_name": "hardened_rhel9",
      "region": "{{user `aws_region`}}",
      "ami_regions": ["{{user `ami_regions`}}"],
      "instance_type": "{{user `linux_build_instance_type`}}",
      "source_ami_filter": {
        "filters": {
          "virtualization-type": "hvm",
          "name": "{{user `linux_base_ami_name`}}",
          "root-device-type": "ebs"
        },
        "owners": ["{{user `linux_base_ami_owner`}}"],
        "most_recent": true
      },
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/xvda",
          "volume_size": "{{user `root_volume_size_Gi`}}",
          "volume_type": "{{user `root_volume_type`}}",
          "delete_on_termination": true
        }
      ],
      "ssh_username": "{{user `ssh_username`}}",
      "tags": {
        "Name": "rhel9-gold",
        "OS_Version": "RHEL9",
        "ENV": "TuranCyberHub"
      }
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sleep 15"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm",
        "sudo dnf -y update",
        "sudo dnf -y install unzip wget jq",
        "sudo dnf -y install python3 python3-pip python3-setuptools python3-libs",
        "curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o /tmp/awscliv2.zip",
        "cd /tmp; unzip awscliv2.zip; rm -f /tmp/awscliv2.zip",
        "sudo /tmp/aws/install -i /usr/local/aws-cli -b /usr/bin"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo reboot"
      ],
      "expect_disconnect": true
    },
    {
      "type": "ansible",
      "command":"{{user `ansible_command`}}",
      "playbook_file": "{{user `ansible_playbook_file`}}",
      "user": "{{user `ssh_username`}}",
      "extra_arguments": [
      ]
    },
    {
      "type": "shell",
      "execute_command": "echo 'ClamAV' | sudo -S sh -c '{{ .Vars }} {{ .Path }}'",
      "script": "../../../shellscripts/linux/clamav.sh"
    },
    {
      "type": "shell",
      "inline": [
        "sudo dnf clean all",
        "sudo rm -rf /var/cache/dnf"
      ]
    }
  ]
}
